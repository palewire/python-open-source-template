name: Test
on:
  push:
  workflow_dispatch:

jobs:
  lint-python:
    name: Lint Python code
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pipenv'

      - id: install-pipenv
        name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
        shell: bash

      - id: install-python-dependencies
        name: Install Python dependencies
        run: pipenv install --dev --python=`which python` 
        shell: bash

      - id: lint
        name: Lint Python code
        run: pipenv run flake8 ./ --verbose
        shell: bash

  mypy-python:
    name: Static type check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pipenv'

      - id: install-pipenv
        name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
        shell: bash

      - id: install-python-dependencies
        name: Install Python dependencies
        run: pipenv install --dev --python=`which python` 
        shell: bash

      - id: mypy
        name: Run mypy
        run: pipenv run mypy ./ --ignore-missing-imports --verbose
        shell: bash

  test-python:
    strategy:
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10']
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python }}'
          cache: 'pipenv'

      - id: install-pipenv
        name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
        shell: bash

      - id: install-python-dependencies
        name: Install Python dependencies
        run: pipenv install --dev --python=${{ matrix.python }}
        shell: bash

      - id: tests
        name: Run tests
        run: pipenv run coverage run test.py
        shell: bash

      - id: coverage
        name: Coverage report
        run: pipenv run coverage report -m
        shell: bash

  test-build:
    name: Build Python package
    runs-on: ubuntu-latest
    needs: [test-python]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pipenv'

      - id: install-pipenv
        name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
        shell: bash

      - id: install-python-dependencies
        name: Install Python dependencies
        run: pipenv install --dev --python=`which python` 
        shell: bash

      - id: build-source
        name: Build source release
        run: pipenv run python setup.py sdist
        shell: bash

      - id: build-binary
        name: Build binary release
        run: pipenv run python setup.py bdist_wheel
        shell: bash

      - id: check
        name: Check release
        run: pipenv run twine check dist/*
        shell: bash

      - id: save
        name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-build-${{ github.run_number }}
          path: ./dist
          if-no-files-found: error
